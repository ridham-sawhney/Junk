<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>DoSurvey-Ridham</title>
  <!-- <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"> -->
  <link rel="stylesheet" href="table.css">
  <link rel="stylesheet" href="navbar.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />

  <style>
    body.blur {
      filter: blur(5px);
      /* Adjust the blur amount as needed */
      pointer-events: none;
    }
  </style>
</head>

<body>

  <div class="pathForm">
    <div class="navbar">
      <div class="title">
        <h3>They Think we Work For Them - LOL! </h3>
       </div>
    
       <div class="details">
        <a href="https://ridhamsawhney.com/" class="item">Contact Developer</a>
        
       </div>
    </div>
   
    
  </div>
 <br> 
  <div class="scriptContainer">
    <form action="/refresh" method="post">
      <button type="submit" class="pathButton">Refresh<span class="material-symbols-outlined">
        refresh
        </span></button>
    </form>
    <form id="scriptForm">
      <button type="button" onclick="runScript()" class="runScript">Run Script</button>
    </form>
  </div>
  



  <br>

  <div class="container">
    <div class="content-parent">
      <div>
        <br><br>
       
        <form action="/" method="post">
          <label for="key" class="pathLabel">Security Key :</label>
          <input type="password" id="key" placeholder="SecurityKey" name="key" required>
          <input type="checkbox" id="visibility">
          <label for="visibility" class="pathcheckbox">Show Passkey </label>
          <br>
          <label for="path" class="pathLabel">Data File Path:</label>
          <input type="text" id="path" name="path" placeholder="File Path" required>
          <button type="submit" class="pathButton">Load Ids</button>

        </form>
        
      </div>
      <br>
      <hr>
      <br>
      <h3>Loaded Ids:</h3>
      <div class="content">
        <% if (jsonData.length> 0) { %>
          <table>
            <tr>
              <th>Username</th>
              <th>Password</th>
            </tr>
            <tbody class="table-body">
              <% jsonData.forEach(data=> { %>
                <tr>
                  <td>
                    <%= data.id %>
                  </td>
                  <td>
                    <%= data.password %>
                  </td>
                </tr>
                <% }); %>
                  <% }%>
            </tbody>

          </table>
      </div>

    </div>

    <div class="traces">
      <div class="TraceTitle" id="TraceTitle">
        <h3 >Traces</h3>
      </div>
      <div id="resultTraces">
        <% if (TraceData.length > 0) { %>
          <table>
            <tr>
              <th>Username</th>
              <th>Password</th>
            </tr>
            <tbody class="table-body">
              <% TraceData.forEach(data => { %>
                <tr>
                  <td><%= data.user %></td>
                  <td><%= data.SurveyResults[0] %></td>
                </tr>
              <% }); %>
            </tbody>
          </table>
        <% } %>
      </div>
    </div>
  </div>


  <script>
  var checkbox=document.getElementById("visibility");
  checkbox.addEventListener('change', function () {
        if (this.checked) {
          document.getElementById("key").type="text";
        } else {
          document.getElementById("key").type="password";
        }
      });
    function runScript() {
      const jsonData = `<%- JSON.stringify(jsonData) %>`;
      const dataToSent = getArraytoJson(JSON.parse(jsonData));
      
      document.body.classList.add('blur');
      fetch('/runScript', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(dataToSent)
      })
        .then(response => response.text())
        .then((message) => {
          if(message=="Access Denied : Contact Ridham." || message=="Load some ids.."){
            alert(message);
          }
          else{
            const Traceheading=document.getElementsByClassName("LastUpdate");
             if (Traceheading.length > 0) {
             // Remove all elements with the specified class name
              Array.from(Traceheading).forEach(function(element) {
                element.remove();
            });
            }

            const LastUpdate= document.createElement('h4');
            LastUpdate.classList.add('LastUpdate');
            LastUpdate.textContent=`[LastUpdated:${new Date().toLocaleString()}]`
            document.getElementById("TraceTitle").appendChild(LastUpdate)
            
            const accordionContainer = document.getElementById('resultTraces');
            accordionContainer.innerHTML='';
            message=JSON.parse(message);
            var count=1;
            message.forEach(item => {
            const accordionItem = createAccordionItem(item.user,count, item.SurveyResults);
            accordionContainer.appendChild(accordionItem);
            count++;
          });
          alert("Successfully Saved Survey Traces  in FolderLocaiton [../Downloads/SurveyTraces]")

          }

          document.body.classList.remove('blur');
         
          //alert(message)
        })
        .catch(error => console.error('Error:', error));
    }

    function getArraytoJson(json) {

      var parentArray = [];
      json.forEach((jsonElement) => {
        var childArray = [];
        childArray.push(jsonElement.id)
        childArray.push(jsonElement.password);
        parentArray.push(childArray);
      })
      return parentArray;
    }
    
    function createAccordionItem(title,count, content) {
    var user=title;
    title=count+". "+title;
    var newDone=0;
    var alreadyDone=0;
    var passed=0;
    var failed=0;
    const accordionContainer = document.createElement('div');
    accordionContainer.classList.add("accordionContainer");

    const accordionHolder = document.createElement('div');
    accordionHolder.classList.add("accordionHolder");
    accordionContainer.appendChild(accordionHolder);

    const accordionItem = document.createElement('details');
    accordionItem.classList.add('accordion');

    accordionHolder.appendChild(accordionItem);

    const summary = document.createElement('summary');
    
    summary.textContent = title;
    accordionItem.appendChild(summary);
   
    const list = document.createElement('ul');
    accordionItem.appendChild(list);
    content.forEach(element => {
        const elementDiv = document.createElement('li');
        elementDiv.classList.add('passed');
        if(element.includes("already"))
        {
          alreadyDone++;
        }
        else if(element.includes("done") && !element.includes("already"))
        {
          newDone++;
        }
        else{
          failed++;
          elementDiv.classList.add('failed');
        }
        elementDiv.textContent = element;
        list.appendChild(elementDiv);
      });
      if((alreadyDone+newDone)==5)
      summary.textContent=title+` [Already Done:${alreadyDone} , Newly Done:${newDone} , Passed : ${alreadyDone+newDone}] `
      else{
        summary.textContent=title+` [Already Done:${alreadyDone} , Newly Done:${newDone} , Passed : ${alreadyDone+newDone}] , Failed : ${failed}] `
        accordionItem.classList.add('error');
      }

      if(alreadyDone==5){
        accordionItem.classList.add('allreadyDone');
      }
  

    const accordionButtonHolder = document.createElement('div');
    accordionButtonHolder.classList.add("accordionButtonHolder");
    accordionContainer.appendChild(accordionButtonHolder);

    const accordionButton = document.createElement('button');
    accordionButton.classList.add("accordionButton");
    accordionButton.textContent="Run Again";
    accordionButton.addEventListener('click',()=> runScriptForOneElement(user));
    accordionButtonHolder.appendChild(accordionButton);
      
    return accordionContainer;
    // return accordionItem;
  }
  

  function runScriptForOneElement(user) {
      console.log(user)
      const jsonData = `<%- JSON.stringify(jsonData) %>`;
      const dataToSent = getArraytoJson(JSON.parse(jsonData));
      // if(dataToSent.length==0){
      //   alert("Load some ids");
      //   return;
      // }
      var finalData = findUserById(user,JSON.parse(jsonData));
      console.log(finalData)
      if(!finalData)
      {
        alert("Id not Found ! Please run whole Script.");
        return;
      }

      document.body.classList.add('blur');
      fetch('/runScriptSingleElement', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(finalData)
      })
        .then(response => response.text())
        .then((message) => {
          if(message=="Access Denied : Contact Ridham." || message=="Load some ids.."){
            alert(message);
          }
          else{
            const Traceheading=document.getElementsByClassName("LastUpdate");
             if (Traceheading.length > 0) {
             // Remove all elements with the specified class name
              Array.from(Traceheading).forEach(function(element) {
                element.remove();
            });
            }

            const LastUpdate= document.createElement('h4');
            LastUpdate.classList.add('LastUpdate');
            LastUpdate.textContent=`[LastUpdated:${new Date().toLocaleString()}]`
            document.getElementById("TraceTitle").appendChild(LastUpdate)
            console.log(message)
            message=JSON.parse(message);
            message=message[0];

            var accordionList = document.getElementsByClassName("accordionContainer");
            Array.from(accordionList).forEach(function(element) {
               console.log(element.textContent);
               var elementText=element.textContent;
               if(elementText.includes(user)){
                element.textContent='';

                newelement=createAccordionItem(message.user,"[RE]",message.SurveyResults);
                element.parentNode.replaceChild(newelement,element);
               }
            });
            // const accordionContainer = document.getElementById('resultTraces');
            // accordionContainer.innerHTML='';
            // message=JSON.parse(message);
            // var count=1;
            // message.forEach(item => {
            // const accordionItem = createAccordionItem(item.user,count, item.SurveyResults);
            // accordionContainer.appendChild(accordionItem);
            // count++;
          // });
          alert("Successfully Saved Survey Traces  in FolderLocaiton [../Downloads/SurveyTraces]")

          }

          document.body.classList.remove('blur');
         
          //alert(message)
        })
        .catch(error => console.error('Error:', error));
    }

    function findUserById(id,userArray) {
      console.log(id);
      console.log(userArray)
      var array=[];
      var usr= userArray.find(user => user.id === id);
      console.log(usr);
      if(!usr){
        return 0;
      }
      array.push(usr)
      return array;
   } 

  </script>

</body>

</html>